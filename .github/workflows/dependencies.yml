name: Dependency Updates

on:
  schedule:
    # Run every Monday at 9 AM UTC
    - cron: '0 9 * * 1'
  workflow_dispatch:
    inputs:
      update_type:
        description: 'Type of update to perform'
        required: true
        default: 'security'
        type: choice
        options:
        - security
        - all
        - python
        - node

env:
  PYTHON_VERSION: '3.11'
  NODE_VERSION: '18'

jobs:
  # Update Python dependencies
  update-python:
    runs-on: ubuntu-latest
    if: github.event.inputs.update_type == 'all' || github.event.inputs.update_type == 'python' || github.event_name == 'schedule'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python ${{ env.PYTHON_VERSION }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Install pip-tools
      run: |
        python -m pip install --upgrade pip
        pip install pip-tools

    - name: Update Python dependencies
      working-directory: ./backend
      run: |
        # Update requirements.txt
        pip-compile --upgrade requirements.in
        pip-compile --upgrade requirements-dev.in
        
        # Check for security vulnerabilities
        safety check --json --output safety-report.json || true
        
        # Generate dependency update report
        pip list --outdated --format=json > outdated-deps.json

    - name: Create Pull Request for Python updates
      uses: peter-evans/create-pull-request@v5
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        commit-message: 'chore: update Python dependencies'
        title: 'ü§ñ Automated Python dependency updates'
        body: |
          ## ü§ñ Automated Python Dependency Updates
          
          This PR was automatically generated to update Python dependencies.
          
          ### Changes Made:
          - Updated Python package dependencies
          - Security vulnerability scan completed
          
          ### Security Report:
          - [View Safety Report](safety-report.json)
          - [View Outdated Dependencies](outdated-deps.json)
          
          ### Next Steps:
          - [ ] Review dependency updates
          - [ ] Run tests to ensure compatibility
          - [ ] Merge if all tests pass
          
          ---
          *This PR was automatically generated by GitHub Actions*
        branch: dependency-updates/python
        delete-branch: true
        labels: |
          dependencies
          python
          automated
          security

  # Update Node.js dependencies
  update-node:
    runs-on: ubuntu-latest
    if: github.event.inputs.update_type == 'all' || github.event.inputs.update_type == 'node' || github.event_name == 'schedule'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Node.js ${{ env.NODE_VERSION }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json

    - name: Install npm-check-updates
      run: npm install -g npm-check-updates

    - name: Update Node.js dependencies
      working-directory: ./frontend
      run: |
        # Check for outdated packages
        ncu --format=json > outdated-packages.json
        
        # Update package.json (but don't install yet)
        ncu --target minor --upgrade
        
        # Generate audit report
        npm audit --json > audit-report.json || true

    - name: Create Pull Request for Node.js updates
      uses: peter-evans/create-pull-request@v5
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        commit-message: 'chore: update Node.js dependencies'
        title: 'ü§ñ Automated Node.js dependency updates'
        body: |
          ## ü§ñ Automated Node.js Dependency Updates
          
          This PR was automatically generated to update Node.js dependencies.
          
          ### Changes Made:
          - Updated Node.js package dependencies
          - Security audit completed
          
          ### Security Report:
          - [View Audit Report](audit-report.json)
          - [View Outdated Packages](outdated-packages.json)
          
          ### Next Steps:
          - [ ] Review dependency updates
          - [ ] Run tests to ensure compatibility
          - [ ] Merge if all tests pass
          
          ---
          *This PR was automatically generated by GitHub Actions*
        branch: dependency-updates/node
        delete-branch: true
        labels: |
          dependencies
          node
          automated
          security

  # Security vulnerability scanning
  security-scan:
    runs-on: ubuntu-latest
    if: github.event.inputs.update_type == 'security' || github.event_name == 'schedule'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python ${{ env.PYTHON_VERSION }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Set up Node.js ${{ env.NODE_VERSION }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json

    - name: Install security tools
      run: |
        pip install safety bandit
        npm install -g audit-ci

    - name: Python security scan
      working-directory: ./backend
      run: |
        # Run safety check
        safety check --json --output safety-report.json || true
        
        # Run bandit security linter
        bandit -r app/ -f json -o bandit-report.json || true
        
        # Check for known vulnerabilities
        pip-audit --json --output pip-audit-report.json || true

    - name: Node.js security scan
      working-directory: ./frontend
      run: |
        # Run npm audit
        npm audit --json > npm-audit-report.json || true
        
        # Run snyk security scan (if available)
        npx snyk test --json > snyk-report.json || true

    - name: Create security report
      run: |
        echo "# Security Scan Report" > security-report.md
        echo "Generated on: $(date)" >> security-report.md
        echo "" >> security-report.md
        echo "## Python Security Issues" >> security-report.md
        echo "" >> security-report.md
        
        if [ -f "backend/safety-report.json" ]; then
          echo "### Safety Check Results" >> security-report.md
          cat backend/safety-report.json | jq -r '.vulnerabilities[]? | "- \(.package_name): \(.vulnerable_spec) - \(.advisory)"' >> security-report.md || echo "No safety issues found" >> security-report.md
        fi
        
        echo "" >> security-report.md
        echo "## Node.js Security Issues" >> security-report.md
        echo "" >> security-report.md
        
        if [ -f "frontend/npm-audit-report.json" ]; then
          echo "### NPM Audit Results" >> security-report.md
          cat frontend/npm-audit-report.json | jq -r '.vulnerabilities[]? | "- \(.name): \(.title) - \(.severity)"' >> security-report.md || echo "No npm audit issues found" >> security-report.md
        fi

    - name: Create security update PR
      if: failure()
      uses: peter-evans/create-pull-request@v5
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        commit-message: 'security: address security vulnerabilities'
        title: 'üö® Security vulnerability fixes required'
        body: |
          ## üö® Security Vulnerabilities Detected
          
          This PR addresses security vulnerabilities found in our dependencies.
          
          ### Security Report:
          - [View Full Security Report](security-report.md)
          - [Python Safety Report](backend/safety-report.json)
          - [Python Bandit Report](backend/bandit-report.json)
          - [NPM Audit Report](frontend/npm-audit-report.json)
          
          ### Required Actions:
          - [ ] Review all security issues
          - [ ] Update vulnerable dependencies
          - [ ] Test fixes thoroughly
          - [ ] Merge security updates
          
          ---
          *This PR was automatically generated by GitHub Actions*
        branch: security-fixes/$(date +%Y%m%d)
        delete-branch: false
        labels: |
          security
          high-priority
          automated
          vulnerabilities

  # Notify on completion
  notify:
    runs-on: ubuntu-latest
    needs: [update-python, update-node, security-scan]
    if: always()

    steps:
    - name: Notify completion
      uses: 8398a7/action-slack@v3
      with:
        status: ${{ job.status }}
        text: 'üîç Dependency update workflow ${{ job.status }} for ${{ github.repository }}#${{ github.run_number }}'
        webhook_url: ${{ secrets.SLACK_WEBHOOK_URL }}
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
