{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "appServiceName": {
      "type": "string",
      "defaultValue": "wordaddin-mcp-app",
      "metadata": {
        "description": "Name of the App Service"
      }
    },
    "postgresServerName": {
      "type": "string",
      "defaultValue": "wordaddin-postgres",
      "metadata": {
        "description": "Name of the PostgreSQL server"
      }
    },
    "redisCacheName": {
      "type": "string",
      "defaultValue": "wordaddin-redis",
      "metadata": {
        "description": "Name of the Redis cache"
      }
    },
    "storageAccountName": {
      "type": "string",
      "defaultValue": "wordaddinstorage",
      "metadata": {
        "description": "Name of the storage account"
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources"
      }
    }
  },
  "variables": {
    "appServicePlanName": "[concat(parameters('appServiceName'), '-plan')]",
    "backendAppName": "[concat(parameters('appServiceName'), '-backend')]",
    "frontendAppName": "[concat(parameters('appServiceName'), '-frontend')]",
    "mcpServerAppName": "[concat(parameters('appServiceName'), '-mcp-server')]",
    "postgresServerNameFull": "[concat(parameters('postgresServerName'), '-', uniqueString(resourceGroup().id))]",
    "redisCacheNameFull": "[concat(parameters('redisCacheName'), '-', uniqueString(resourceGroup().id))]",
    "storageAccountNameFull": "[concat(parameters('storageAccountName'), uniqueString(resourceGroup().id))]"
  },
  "resources": [
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2022-03-01",
      "name": "[variables('appServicePlanName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "B1",
        "tier": "Basic",
        "size": "B1",
        "family": "B",
        "capacity": 1
      },
      "kind": "linux",
      "properties": {
        "reserved": true
      }
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2022-03-01",
      "name": "[variables('backendAppName')]",
      "location": "[parameters('location')]",
      "kind": "app,linux",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]"
      ],
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]",
        "siteConfig": {
          "linuxFxVersion": "PYTHON|3.11",
          "appSettings": [
            {
              "name": "WEBSITES_ENABLE_APP_SERVICE_STORAGE",
              "value": "false"
            },
            {
              "name": "ENVIRONMENT",
              "value": "production"
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2022-03-01",
      "name": "[variables('frontendAppName')]",
      "location": "[parameters('location')]",
      "kind": "app,linux",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]"
      ],
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]",
        "siteConfig": {
          "linuxFxVersion": "NODE|18-lts",
          "appSettings": [
            {
              "name": "WEBSITES_ENABLE_APP_SERVICE_STORAGE",
              "value": "false"
            },
            {
              "name": "REACT_APP_ENVIRONMENT",
              "value": "production"
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2022-03-01",
      "name": "[variables('mcpServerAppName')]",
      "location": "[parameters('location')]",
      "kind": "app,linux",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]"
      ],
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]",
        "siteConfig": {
          "linuxFxVersion": "PYTHON|3.11",
          "appSettings": [
            {
              "name": "WEBSITES_ENABLE_APP_SERVICE_STORAGE",
              "value": "false"
            },
            {
              "name": "ENVIRONMENT",
              "value": "production"
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.DBforPostgreSQL/flexibleServers",
      "apiVersion": "2023-06-01-preview",
      "name": "[variables('postgresServerNameFull')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Standard_B1ms",
        "tier": "Burstable"
      },
      "properties": {
        "administratorLogin": "wordaddin_admin",
        "administratorLoginPassword": "WordAddin2024!",
        "storage": {
          "storageSizeGB": 32
        },
        "backup": {
          "backupRetentionDays": 7,
          "geoRedundantBackup": "Disabled"
        },
        "highAvailability": {
          "mode": "Disabled"
        },
        "version": "15"
      }
    },
    {
      "type": "Microsoft.DBforPostgreSQL/flexibleServers/databases",
      "apiVersion": "2023-06-01-preview",
      "name": "wordaddin",
      "parent": {
        "id": "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', variables('postgresServerNameFull'))]"
      },
      "properties": {
        "charset": "utf8",
        "collation": "en_US.utf8"
      }
    },
    {
      "type": "Microsoft.Cache/redis",
      "apiVersion": "2023-08-01",
      "name": "[variables('redisCacheNameFull')]",
      "location": "[parameters('location')]",
      "properties": {
        "sku": {
          "name": "Standard",
          "family": "C",
          "capacity": 1
        },
        "enableNonSslPort": false,
        "minimumTlsVersion": "1.2"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2023-01-01",
      "name": "[variables('storageAccountNameFull')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Standard_LRS"
      },
      "kind": "StorageV2",
      "properties": {
        "accessTier": "Hot",
        "supportsHttpsTrafficOnly": true,
        "minimumTlsVersion": "TLS1_2"
      }
    }
  ],
  "outputs": {
    "backendAppUrl": {
      "type": "string",
      "value": "[concat('https://', reference(variables('backendAppName')).defaultHostName)]"
    },
    "frontendAppUrl": {
      "type": "string",
      "value": "[concat('https://', reference(variables('frontendAppName')).defaultHostName)]"
    },
    "mcpServerAppUrl": {
      "type": "string",
      "value": "[concat('https://', reference(variables('mcpServerAppName')).defaultHostName)]"
    },
    "postgresServerName": {
      "type": "string",
      "value": "[variables('postgresServerNameFull')]"
    },
    "redisCacheName": {
      "type": "string",
      "value": "[variables('redisCacheNameFull')]"
    },
    "storageAccountName": {
      "type": "string",
      "value": "[variables('storageAccountNameFull')]"
    }
  }
}